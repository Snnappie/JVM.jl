#!/usr/bin/env julia

using JDeps

print_help() = println(join([
  "\ninstall    =>  Install all dependencies",
  "run [file]   =>  Execute a Julia file in the current context",
  "load [file]  =>  Start the Julia REPL in the current context",
  "init         =>  Create a local package directory",
  "freeze       =>  Save the current state to the dependencies file",
  "update       =>  Update METADATA for the local package directory",
  "add [name or URL] [version or SHA]  =>  Add a dependency\n"
], '\n'))

if length(ARGS) == 0
  print_help()
  exit()
end

if ARGS[1] == "install"
  JDeps.install()
elseif ARGS[1] == "run"
  file = length(ARGS) > 1 ? ARGS[length(ARGS)] : ""
  if file == ""
  else
    include(joinpath(pwd(), ARGS[2]))
  end
elseif ARGS[1] == "init"
  JDeps.init()
elseif ARGS[1] == "add"
  pkg = length(ARGS) > 1 ? ARGS[2] : ""
  version = length(ARGS) > 2 ? ARGS[3] : ""
  if version == ""
    JDeps.add(pkg)
  else
    JDeps.add(pkg, version)
  end
elseif ARGS[1] == "freeze"
  JDeps.freeze()
elseif ARGS[1] == "update"
  JDeps.update()
elseif ARGS[1] == "load"
  if length(ARGS) < 2 run(`julia`) else run(`julia -L $(ARGS[2])`) end
else
  print_help()
end
